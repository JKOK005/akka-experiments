[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/TrackerWorkerBaseClass.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/AccountsTracker.scala, /home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/TellerWorker.scala, /home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/PersistentActorBase.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/main.scala, /home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/LoggerWorker.scala, /home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/SupervisorWorker.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(Finance.Akka.Workers.TrackerWorkerBaseClass, Finance.Akka.Workers.SupervisorWorker, Finance.Akka.Main, Finance.Akka.Workers.LoggerWorkerClass)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(Finance.Akka.Workers.TrackerWorkerBaseClass, Finance.Akka.Workers.SupervisorWorker, Finance.Akka.Main, Finance.Akka.Workers.LoggerWorkerClass)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/main.scala, /home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/AccountsTracker.scala, /home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/TellerWorker.scala, /home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/PersistentActorBase.scala, /home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/LoggerWorker.scala, /home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/SupervisorWorker.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 7 sources: invalidated sources (7) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 7 Scala sources to /home/johan/Desktop/johan/akka-experiments/FinaceTracker/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.5:compile for Scala 2.12.2[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.5:compile for Scala 2.12.2[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 56c540b8 for Scala compiler version 2.12.2[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes:/home/johan/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.2.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/johan/Desktop/johan/akka-experiments/FinaceTracker/target/scala-2.12/classes:/home/johan/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.12/bundles/scala-java8-compat_2.12-0.8.0.jar:/home/johan/.ivy2/cache/com.typesafe.akka/akka-testkit_2.12/jars/akka-testkit_2.12-2.5.3.jar:/home/johan/.ivy2/cache/com.typesafe.akka/akka-persistence_2.12/jars/akka-persistence_2.12-2.5.9.jar:/home/johan/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.9.jar:/home/johan/.ivy2/cache/com.typesafe/config/bundles/config-1.3.2.jar:/home/johan/.ivy2/cache/com.typesafe.akka/akka-protobuf_2.12/jars/akka-protobuf_2.12-2.5.9.jar:/home/johan/.ivy2/cache/org.iq80.leveldb/leveldb/jars/leveldb-0.7.jar:/home/johan/.ivy2/cache/org.iq80.leveldb/leveldb-api/jars/leveldb-api-0.7.jar:/home/johan/.ivy2/cache/com.google.guava/guava/bundles/guava-16.0.1.jar:/home/johan/.ivy2/cache/org.fusesource.leveldbjni/leveldbjni-all/bundles/leveldbjni-all-1.8.jar:/home/johan/.ivy2/cache/com.typesafe.akka/akka-slf4j_2.12/jars/akka-slf4j_2.12-2.5.9.jar:/home/johan/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.25.jar:/home/johan/.ivy2/cache/ch.qos.logback/logback-classic/jars/logback-classic-1.2.3.jar:/home/johan/.ivy2/cache/ch.qos.logback/logback-core/jars/logback-core-1.2.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 3.782339175 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Finance.Akka.Workers.LoggerWorkerClass...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Finance.Akka.Workers.LoggerWorkerClass)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Finance.Akka.Workers.LoggerWorkerClass)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Finance.Akka.Workers.PersistentActorBase: Set(UsedName(props,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Finance.Akka.Workers.LoggerWorkerClass,ModifiedNames(changes = UsedName(Finance;Akka;Workers;LoggerWorkerClass;init;,[Default]), UsedName(props,[Default]))) invalidates 2 classes due to The Finance.Akka.Workers.LoggerWorkerClass has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Finance;Akka;Workers;LoggerWorkerClass;init;,[Default]), UsedName(props,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Finance.Akka.Workers.LoggerWorkerClass)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Finance.Akka.Workers.PersistentActorBase)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Finance.Akka.Main...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Finance.Akka.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Finance.Akka.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Finance.Akka.Main,ModifiedNames(changes = UsedName(config,[Default]), UsedName(configStr,[Default]))) invalidates 1 classes due to The Finance.Akka.Main has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(config,[Default]), UsedName(configStr,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Finance.Akka.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Finance.Akka.Workers.AccountsTracker...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Finance.Akka.Workers.AccountsTracker)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Finance.Akka.Workers.AccountsTracker)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Finance.Akka.Workers.AccountsTracker,ModifiedNames(changes = UsedName(clone,[Default]), UsedName(self,[Implicit]), UsedName(internalDeferAsync,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(addState,[Default]), UsedName(Receive,[Default]), UsedName(persistAsync,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(snapshotSequenceNr,[Default]), UsedName(deleteSnapshot,[Default]), UsedName(internalPersistAllAsync,[Default]), UsedName(mailbox,[Default]), UsedName($isInstanceOf,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(internalStashOverflowStrategy,[Default]), UsedName(getClass,[Default]), UsedName(persistAllAsync,[Default]), UsedName(recoveryFinished,[Default]), UsedName(saveSnapshot,[Default]), UsedName(createStash,[Default]), UsedName(snapshotterId,[Default]), UsedName(internalPersistAll,[Default]), UsedName(eq,[Default]), UsedName(persist,[Default]), UsedName(journal,[Default]), UsedName(recovery,[Default]), UsedName(sender,[Default]), UsedName(postStop,[Default]), UsedName(preRestart,[Default]), UsedName(loadSnapshot,[Default]), UsedName(==,[Default]), UsedName(deferAsync,[Default]), UsedName(notifyAll,[Default]), UsedName(prepend,[Default]), UsedName(notify,[Default]), UsedName(receiveCommand,[Default]), UsedName(internalPersist,[Default]), UsedName(##,[Default]), UsedName(recoveryRunning,[Default]), UsedName(ne,[Default]), UsedName(snapshotPluginId,[Default]), UsedName(onPersistFailure,[Default]), UsedName(lastSequenceNr,[Default]), UsedName(Finance;Akka;Workers;AccountsTracker;init;,[Default]), UsedName(onPersistRejected,[Default]), UsedName(onRecoveryFailure,[Default]), UsedName(props,[Default]), UsedName(asInstanceOf,[Default]), UsedName(journalPluginId,[Default]), UsedName(context,[Implicit]), UsedName(snapshotStore,[Default]), UsedName(aroundPreStart,[Default]), UsedName(persistenceId,[Default]), UsedName(unstash,[Default]), UsedName(persistAll,[Default]), UsedName(loggerActorRef,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(receiveRecover,[Default]), UsedName(postRestart,[Default]), UsedName(aroundPostStop,[Default]), UsedName(log,[Default]), UsedName($init$,[Default]), UsedName(onReplaySuccess,[Default]), UsedName(internalPersistAsync,[Default]), UsedName(unstashAll,[Default]), UsedName(preStart,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(stash,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(unhandled,[Default]), UsedName(aroundReceive,[Default]), UsedName(deleteSnapshots,[Default]), UsedName(clearStash,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(deleteMessages,[Default]), UsedName(state,[Default]), UsedName(AccountsTracker,[Default]))) invalidates 1 classes due to The Finance.Akka.Workers.AccountsTracker has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Finance.Akka.Workers.AccountsTracker)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Finance.Akka.Workers.TrackerWorkerBaseClass...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Finance.Akka.Workers.TrackerWorkerBaseClass)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Finance.Akka.Workers.TrackerWorkerBaseClass)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Finance.Akka.Workers.TrackerWorkerBaseClass,ModifiedNames(changes = UsedName(clone,[Default]), UsedName(self,[Implicit]), UsedName(internalDeferAsync,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(addState,[Default]), UsedName(Receive,[Default]), UsedName(persistAsync,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(Finance;Akka;Workers;TrackerWorkerBaseClass;init;,[Default]), UsedName(snapshotSequenceNr,[Default]), UsedName(deleteSnapshot,[Default]), UsedName(internalPersistAllAsync,[Default]), UsedName(mailbox,[Default]), UsedName($isInstanceOf,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(internalStashOverflowStrategy,[Default]), UsedName(getClass,[Default]), UsedName(persistAllAsync,[Default]), UsedName(recoveryFinished,[Default]), UsedName(saveSnapshot,[Default]), UsedName(createStash,[Default]), UsedName(snapshotterId,[Default]), UsedName(internalPersistAll,[Default]), UsedName(eq,[Default]), UsedName(persist,[Default]), UsedName(TrackerWorkerBaseClass,[Default]), UsedName(journal,[Default]), UsedName(recovery,[Default]), UsedName(sender,[Default]), UsedName(postStop,[Default]), UsedName(preRestart,[Default]), UsedName(loadSnapshot,[Default]), UsedName(==,[Default]), UsedName(deferAsync,[Default]), UsedName(notifyAll,[Default]), UsedName(prepend,[Default]), UsedName(notify,[Default]), UsedName(receiveCommand,[Default]), UsedName(internalPersist,[Default]), UsedName(##,[Default]), UsedName(recoveryRunning,[Default]), UsedName(ne,[Default]), UsedName(snapshotPluginId,[Default]), UsedName(onPersistFailure,[Default]), UsedName(lastSequenceNr,[Default]), UsedName(onPersistRejected,[Default]), UsedName(onRecoveryFailure,[Default]), UsedName(props,[Default]), UsedName(asInstanceOf,[Default]), UsedName(journalPluginId,[Default]), UsedName(context,[Implicit]), UsedName(snapshotStore,[Default]), UsedName(aroundPreStart,[Default]), UsedName(persistenceId,[Default]), UsedName(unstash,[Default]), UsedName(persistAll,[Default]), UsedName(loggerActorRef,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(receiveRecover,[Default]), UsedName(postRestart,[Default]), UsedName(aroundPostStop,[Default]), UsedName(log,[Default]), UsedName($init$,[Default]), UsedName(onReplaySuccess,[Default]), UsedName(internalPersistAsync,[Default]), UsedName(unstashAll,[Default]), UsedName(preStart,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(stash,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(unhandled,[Default]), UsedName(aroundReceive,[Default]), UsedName(deleteSnapshots,[Default]), UsedName(clearStash,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(deleteMessages,[Default]), UsedName(state,[Default]))) invalidates 1 classes due to The Finance.Akka.Workers.TrackerWorkerBaseClass has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Finance.Akka.Workers.TrackerWorkerBaseClass)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Finance.Akka.Workers.TellerWorker...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Finance.Akka.Workers.TellerWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Finance.Akka.Workers.TellerWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of Finance.Akka.Workers.TellerWorker are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Finance.Akka.Workers.SupervisorWorker[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Finance.Akka.Workers.TellerWorker,ModifiedNames(changes = UsedName(clone,[Default]), UsedName(self,[Implicit]), UsedName(internalDeferAsync,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(addState,[Default]), UsedName(Receive,[Default]), UsedName(persistAsync,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(snapshotSequenceNr,[Default]), UsedName(deleteSnapshot,[Default]), UsedName(internalPersistAllAsync,[Default]), UsedName(mailbox,[Default]), UsedName($isInstanceOf,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(internalStashOverflowStrategy,[Default]), UsedName(getClass,[Default]), UsedName(persistAllAsync,[Default]), UsedName(recoveryFinished,[Default]), UsedName(saveSnapshot,[Default]), UsedName(createStash,[Default]), UsedName(snapshotterId,[Default]), UsedName(internalPersistAll,[Default]), UsedName(eq,[Default]), UsedName(persist,[Default]), UsedName(journal,[Default]), UsedName(recovery,[Default]), UsedName(sender,[Default]), UsedName(postStop,[Default]), UsedName(preRestart,[Default]), UsedName(loadSnapshot,[Default]), UsedName(==,[Default]), UsedName(deferAsync,[Default]), UsedName(notifyAll,[Default]), UsedName(prepend,[Default]), UsedName(notify,[Default]), UsedName(receiveCommand,[Default]), UsedName(internalPersist,[Default]), UsedName(##,[Default]), UsedName(recoveryRunning,[Default]), UsedName(ne,[Default]), UsedName(snapshotPluginId,[Default]), UsedName(onPersistFailure,[Default]), UsedName(lastSequenceNr,[Default]), UsedName(onPersistRejected,[Default]), UsedName(onRecoveryFailure,[Default]), UsedName(props,[Default]), UsedName(asInstanceOf,[Default]), UsedName(journalPluginId,[Default]), UsedName(context,[Implicit]), UsedName(snapshotStore,[Default]), UsedName(aroundPreStart,[Default]), UsedName(persistenceId,[Default]), UsedName(TellerWorker,[Default]), UsedName(unstash,[Default]), UsedName(persistAll,[Default]), UsedName(loggerActorRef,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(receiveRecover,[Default]), UsedName(postRestart,[Default]), UsedName(aroundPostStop,[Default]), UsedName(log,[Default]), UsedName($init$,[Default]), UsedName(onReplaySuccess,[Default]), UsedName(internalPersistAsync,[Default]), UsedName(unstashAll,[Default]), UsedName(preStart,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(stash,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(unhandled,[Default]), UsedName(aroundReceive,[Default]), UsedName(deleteSnapshots,[Default]), UsedName(clearStash,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(deleteMessages,[Default]), UsedName(state,[Default]), UsedName(Finance;Akka;Workers;TellerWorker;init;,[Default]))) invalidates 2 classes due to The Finance.Akka.Workers.TellerWorker has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Finance.Akka.Workers.TellerWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Finance.Akka.Workers.SupervisorWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Finance.Akka.Workers.PersistentActorBase...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Finance.Akka.Workers.PersistentActorBase)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Finance.Akka.Workers.TellerWorker by Finance.Akka.Workers.PersistentActorBase[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Finance.Akka.Workers.AccountsTracker by Finance.Akka.Workers.PersistentActorBase[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Finance.Akka.Workers.AccountsTracker, Finance.Akka.Workers.TellerWorker, Finance.Akka.Workers.PersistentActorBase)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of Finance.Akka.Workers.TellerWorker are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Finance.Akka.Workers.SupervisorWorker[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of Finance.Akka.Workers.PersistentActorBase are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Finance.Akka.Workers.AccountsTracker[0m
[0m[[0m[0mdebug[0m] [0m[0m	Finance.Akka.Workers.TellerWorker[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Finance.Akka.Workers.PersistentActorBase,ModifiedNames(changes = UsedName(clone,[Default]), UsedName(self,[Implicit]), UsedName(internalDeferAsync,[Default]), UsedName(synchronized,[Default]), UsedName(wait,[Default]), UsedName(addState,[Default]), UsedName(Receive,[Default]), UsedName(persistAsync,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(snapshotSequenceNr,[Default]), UsedName(deleteSnapshot,[Default]), UsedName(internalPersistAllAsync,[Default]), UsedName(mailbox,[Default]), UsedName($isInstanceOf,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(internalStashOverflowStrategy,[Default]), UsedName(getClass,[Default]), UsedName(persistAllAsync,[Default]), UsedName(recoveryFinished,[Default]), UsedName(saveSnapshot,[Default]), UsedName(createStash,[Default]), UsedName(snapshotterId,[Default]), UsedName(internalPersistAll,[Default]), UsedName(Finance;Akka;Workers;PersistentActorBase;init;,[Default]), UsedName(eq,[Default]), UsedName(persist,[Default]), UsedName(journal,[Default]), UsedName(recovery,[Default]), UsedName(sender,[Default]), UsedName(postStop,[Default]), UsedName(preRestart,[Default]), UsedName(loadSnapshot,[Default]), UsedName(==,[Default]), UsedName(deferAsync,[Default]), UsedName(notifyAll,[Default]), UsedName(prepend,[Default]), UsedName(notify,[Default]), UsedName(receiveCommand,[Default]), UsedName(internalPersist,[Default]), UsedName(##,[Default]), UsedName(recoveryRunning,[Default]), UsedName(ne,[Default]), UsedName(snapshotPluginId,[Default]), UsedName(onPersistFailure,[Default]), UsedName(lastSequenceNr,[Default]), UsedName(onPersistRejected,[Default]), UsedName(onRecoveryFailure,[Default]), UsedName(asInstanceOf,[Default]), UsedName(journalPluginId,[Default]), UsedName(context,[Implicit]), UsedName(snapshotStore,[Default]), UsedName(aroundPreStart,[Default]), UsedName(persistenceId,[Default]), UsedName(unstash,[Default]), UsedName(persistAll,[Default]), UsedName(loggerActorRef,[Default]), UsedName(equals,[Default]), UsedName(receive,[Default]), UsedName(receiveRecover,[Default]), UsedName(postRestart,[Default]), UsedName(aroundPostStop,[Default]), UsedName(log,[Default]), UsedName($init$,[Default]), UsedName(onReplaySuccess,[Default]), UsedName(internalPersistAsync,[Default]), UsedName(PersistentActorBase,[Default]), UsedName(unstashAll,[Default]), UsedName(preStart,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(stash,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(unhandled,[Default]), UsedName(aroundReceive,[Default]), UsedName(deleteSnapshots,[Default]), UsedName(clearStash,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(deleteMessages,[Default]), UsedName(state,[Default]))) invalidates 4 classes due to The Finance.Akka.Workers.PersistentActorBase has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Finance.Akka.Workers.AccountsTracker, Finance.Akka.Workers.TellerWorker, Finance.Akka.Workers.PersistentActorBase)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Finance.Akka.Workers.SupervisorWorker, Finance.Akka.Workers.TellerWorker, Finance.Akka.Workers.AccountsTracker)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(Finance.Akka.Workers.SupervisorWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Finance.Akka.Workers.SupervisorWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Finance.Akka.Main by Finance.Akka.Workers.SupervisorWorker[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(Finance.Akka.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
