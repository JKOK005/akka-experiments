[0m[[0m[33mwarn[0m] [0m[0m/home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/AccountsTracker.scala:23:18: non-variable type argument String in type pattern List[String] (the underlying of List[String]) is unchecked since it is eliminated by erasure[0m
[0m[[0m[33mwarn[0m] [0m[0m		case newState: List[String] => addState(newState);[0m
[0m[[0m[33mwarn[0m] [0m[0m		               ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/Workers/AccountsTracker.scala:34:25: non-variable type argument String in type pattern List[String] (the underlying of List[String]) is unchecked since it is eliminated by erasure[0m
[0m[[0m[33mwarn[0m] [0m[0m				case validNewState: List[String] => {[0m
[0m[[0m[33mwarn[0m] [0m[0m				                    ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/main.scala:58:26: match may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0mIt would fail on the following input: None[0m
[0m[[0m[33mwarn[0m] [0m[0m												userInput.get("name") match {[0m
[0m[[0m[33mwarn[0m] [0m[0m												             ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/johan/Desktop/johan/akka-experiments/FinaceTracker/src/main/scala/Finance/Akka/main.scala:64:26: match may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0mIt would fail on the following input: None[0m
[0m[[0m[33mwarn[0m] [0m[0m												userInput.get("name") match {[0m
[0m[[0m[33mwarn[0m] [0m[0m												             ^[0m
[0m[[0m[33mwarn[0m] [0m[0mthere were 5 feature warnings; re-run with -feature for details[0m
[0m[[0m[33mwarn[0m] [0m[0m5 warnings found[0m
